directive @unique on FIELD_DEFINITION | OBJECT | ARGUMENT_DEFINITION

type Query {
	GetCustomersByPartialPhone(substring: String): [Customer]
		@cypher(
			statement: "MATCH (c:Customer) WHERE c.phone CONTAINS $substring RETURN c"
		)
}

type Customer {
	id: ID!
	name: String!
	phone: String!
	email: String!
	password: String!
	addresses: [CustomerAddress]!
		@relation(name: "HAS_ADDRESS", direction: "OUT")
	orders: [Order]! @relation(name: "HAS_ORDERS", direction: "OUT")
	createdAt: DateTime!
	updatedAt: DateTime!
}

type CustomerAddress {
	id: ID!
	street: String!
	city: String!
	state: String!
	zip: String!
	addressCategory: AddressCategoryEnum!
	customer: [Customer]! @relation(name: "HAS_ADDRESS", direction: "IN")
}

enum AddressCategoryEnum {
	home
	office
	other
}

type Product {
	id: ID!
	name: String!
	imgUrl: String!
	categories: [ProductCategory]!
		@relation(name: "HAS_PRODUCT_CATEGORIES", direction: "OUT")
	price: Float!
	description: String!
	status: ProductStatusEnum!
	createdAt: DateTime!
	updatedAt: DateTime!
}

enum ProductStatusEnum {
	available
	not_available
}

type ProductCategory @unique {
	name: String!
	products: [Product]
		@relation(name: "HAS_PRODUCT_CATEGORIES", direction: "IN")
}

type Order {
	id: ID!
	orderItems: [OrderItem] @relation(name: "HAS_ORDER_ITEMS", direction: "OUT")
	customer: Customer @relation(name: "HAS_ORDERS", direction: "IN")
	details: String
	status: OrderStatusEnum!
	createdAt: DateTime!
	updatedAt: DateTime!
}

enum OrderStatusEnum {
	ordered
	delivered
	cancelled
}

type OrderItem {
	id: ID!
	name: String! # Copy from the product on order item's creation
	price: Float! # Copy from the product on order item's creation
	quantity: Int!
    productId: String!
	# total - calculable field
	total: Float
		@cypher(statement: "MATCH (this) RETURN this.quantity * this.price")
	order: Order @relation(name: "HAS_ORDER_ITEMS", direction: "IN")
}
